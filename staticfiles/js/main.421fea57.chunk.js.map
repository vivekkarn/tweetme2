{"version":3,"sources":["lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","event","console","log","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didperformAction","likes","className","handleActionBackendEvent","display","type","onClick","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookUp","setDidLookUp","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","og_tweet","Tweet","isRetweet","hideActions","didRetweet","actionTweet","setActionTweet","path","pathname","idRegex","match","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","nextURL","setNextURL","tweetDidSet","setTweetDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInIt","unshift","updateFinalTweet","map","item","index","key","newResults","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","ref","required","newValue","current","value","FeedList","TweetDetailComponent","setTweet","apiTweetDetail","Boolean","hostname","e","createElement","tweetElement","getElementById","myComponent","setNewTweets","canTweet","tempNewTweets","dataset","ReactDOM","render","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"yMAgBO,SAASA,EAAcC,EAAQC,EAAUC,EAAUC,GACxD,IAAIC,EACAD,IACFC,EAAWC,KAAKC,UAAUH,IAE5B,IAAMI,EAAM,IAAIC,eACVC,EAAG,oCAAgCR,GACzCM,EAAIG,aAAe,OACnB,IAAIC,EAxBN,SAAmBC,GACjB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAIH,EAASC,EAAQE,GAAGE,OAExB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAOP,EAAO,IAAK,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIN,OAAON,EAWSU,CAAU,aAC1BhB,EAAIiB,KAAKxB,EAAQS,GACjBF,EAAIkB,iBAAiB,eAAgB,oBACjCd,IAEFJ,EAAIkB,iBAAiB,mBAAoB,kBACzClB,EAAIkB,iBAAiB,cAAed,IAEtCJ,EAAImB,OAAS,WACQ,MAAfnB,EAAIoB,SAES,kDADApB,EAAIqB,SAASC,SAEqB,IAA3CC,OAAOC,SAASC,KAAKC,QAAQ,WAC/BH,OAAOC,SAASC,KAAO,kCAI7B9B,EAASK,EAAIqB,SAAUrB,EAAIoB,SAG7BpB,EAAI2B,QAAU,SAAUC,GACtBC,QAAQC,IAAI,YAAaF,GACzBjC,EAAS,CAAEoC,QAAS,sBAAwB,MAE9C/B,EAAIgC,KAAKnC,GCjCJ,SAASoC,EAAatC,EAAUuC,GACrC,IAAIxC,EAAW,cACC,OAAZwC,QAAgCC,IAAZD,IACtBxC,EAAWwC,EAAQE,QAAQ,6BAA8B,KAE3D5C,EAAc,MAAOE,EAAUC,GAG1B,SAAS0C,EAAaC,EAAU3C,EAAUuC,GAC/C,IAAIxC,EAAW,SACX4C,IACF5C,EAAQ,2BAAuB4C,IAEjB,OAAZJ,QAAgCC,IAAZD,IACtBxC,EAAWwC,EAAQE,QAAQ,6BAA8B,KAE3D5C,EAAc,MAAOE,EAAUC,G,WC5B1B,SAAS4C,EAAUC,GAAQ,IACxBC,EAAoCD,EAApCC,MAAOC,EAA6BF,EAA7BE,OAAQC,EAAqBH,EAArBG,iBACjBC,EAAQH,EAAMG,MAAQH,EAAMG,MAAQ,EACpCC,EAAYL,EAAMK,UACpBL,EAAMK,UACN,yBAEEC,EAA2B,SAACzB,EAAUD,GAC1B,MAAXA,GAA6B,MAAXA,IAAmBuB,GACxCA,EAAiBtB,EAAUD,IAQzB2B,EACY,SAAhBL,EAAOM,KAAP,UAA4BJ,EAA5B,YAAqCF,EAAOK,SAAYL,EAAOK,QAEjE,OACE,4BAAQF,UAAWA,EAAWI,QATZ,SAACrB,GACnBA,EAAMsB,iBDVH,SAAwBC,EAAST,EAAQ/C,GAE9CH,EAAc,OAAQ,gBAAiBG,EAD1B,CAAEyD,GAAID,EAAST,OAAQA,ICUlCW,CAAeZ,EAAMW,GAAIV,EAAOM,KAAMF,KAQnC,IACAC,GCxBA,SAASO,EAASd,GAAQ,IACvBF,EAAaE,EAAbF,SAIR,OACE,0BAAMO,UAAU,UAAUI,QAJL,SAACrB,GACtBL,OAAOC,SAASC,KAAhB,oBAAoCa,KAIjCE,EAAMe,UAKN,SAASC,EAAYhB,GAAQ,IAC1BiB,EAAoCjB,EAApCiB,KAAMC,EAA8BlB,EAA9BkB,gBAAiBC,EAAanB,EAAbmB,SACzBC,GACgB,IAApBF,EAAA,UAA8BD,EAAKI,WAAnC,YAAiDJ,EAAKK,UAAtD,KAAqE,KACvE,OACE,kBAAC,IAAMC,SAAP,KACGH,GACa,IAAbD,EAAA,WACKF,EAAKnB,UAET,kBAACgB,EAAD,CAAUhB,SAAUmB,EAAKnB,UAAzB,IAAqCmB,EAAKnB,WAM3C,SAAS0B,EAAYxB,GAAQ,IAC1BiB,EAAmBjB,EAAnBiB,KAAME,EAAanB,EAAbmB,SACRM,EACJ,0BAAMpB,UAAU,oDACbY,EAAKnB,SAAS,IAGnB,OAAoB,IAAbqB,EACLM,EAEA,kBAACX,EAAD,CAAUhB,SAAUmB,EAAKnB,UAAW2B,G,oBCrCjC,SAASC,EAAa1B,GAC3B,OACE,0BAAMK,UAAWL,EAAMK,WACpBsB,IAAQ3B,EAAMe,UAAUa,OAAO,OCDtC,SAASC,EAAa7B,GAAQ,IACpBiB,EAA0CjB,EAA1CiB,KAAMa,EAAoC9B,EAApC8B,gBAAiBC,EAAmB/B,EAAnB+B,eAC3BC,EAAcf,GAAQA,EAAKgB,aAAe,WAAa,SAC3DD,EAAcD,EAAiB,aAAeC,EAU9C,OAAOf,EACL,6BACE,kBAACO,EAAD,CAAaP,KAAMA,EAAME,UAAQ,IACjC,2BACE,kBAACH,EAAD,CAAaC,KAAMA,EAAMC,iBAAe,EAACC,UAAQ,IAAI,KAEvD,2BACE,kBAACO,EAAD,KAAeT,EAAKiB,gBADtB,cAGA,2BACE,kBAACR,EAAD,KAAeT,EAAKkB,iBADtB,eAGA,2BAAIlB,EAAKmB,KACT,2BAAInB,EAAKjC,UACT,4BAAQqB,UAAU,kBAAkBI,QAtBb,SAACrB,GAC1BA,EAAMsB,iBACNrB,QAAQC,IAAIF,GACR0C,IAAoBC,GACtBD,EAAgBE,KAmBbA,IAGH,KAGC,SAASK,EAAsBrC,GAAQ,IACpCF,EAAaE,EAAbF,SADmC,EAETwC,oBAAS,GAFA,mBAEpCC,EAFoC,KAEzBC,EAFyB,OAGbF,mBAAS,MAHI,mBAGpCG,EAHoC,KAG3BC,EAH2B,OAICJ,oBAAS,GAJV,mBAIpCP,EAJoC,KAIpBY,EAJoB,KAMrCC,EAAsB,SAAC/D,EAAUD,GACtB,MAAXA,GACF8D,EAAW7D,IAIfgE,qBAAU,YACU,IAAdN,KClDD,SAA0BzC,EAAU3C,GACzCH,EAAc,MAAD,mBAAoB8C,GAAY3C,GDkDzC2F,CAAiBhD,EAAU8C,GAC3BJ,GAAa,MAEd,CAAC1C,EAAU0C,EAAcD,IAa5B,OAAqB,IAAdA,EACL,aACEE,EACF,kBAACZ,EAAD,CACEZ,KAAMwB,EACNX,gBAhBoB,SAACiB,GACvB1D,QAAQC,IAAIyD,GCrDT,SAAgCjD,EAAUI,EAAQ/C,GACvD,IAAMC,EAAO,CAAE8C,OAAQ,UAAGA,GAAUA,GAAS8C,eAC7ChG,EAAc,OAAD,mBAAqB8C,EAArB,WAAwC3C,EAAUC,GDoD7D6F,CAAuBnD,EAAUiD,GAAY,SAAClE,EAAUD,GACtDS,QAAQC,IAAIT,EAAUD,GACP,MAAXA,GACF8D,EAAW7D,GAEb8D,GAAkB,MAEpBA,GAAkB,IAQhBZ,eAAgBA,IAEhB,KEzEC,SAASmB,EAAYlD,GAAQ,IAC1BC,EAAUD,EAAVC,MACR,OAAOA,EAAMkD,SACX,kBAACC,EAAD,CAAOC,WAAS,EAACC,aAAW,EAACrD,MAAOA,EAAMkD,WACxC,KAGC,SAASC,EAAMpD,GAAQ,IACpBC,EAA8CD,EAA9CC,MAAOsD,EAAuCvD,EAAvCuD,WAAYD,EAA2BtD,EAA3BsD,YAAaD,EAAcrD,EAAdqD,UADb,EAEWf,mBACpCtC,EAAMC,MAAQD,EAAMC,MAAQ,MAHH,mBAEpBuD,EAFoB,KAEPC,EAFO,KAKvBpD,EAAYL,EAAMK,UAAYL,EAAMK,UAAY,0BACpDA,GACgB,IAAdgD,EAAA,UAAwBhD,EAAxB,uBAAyDA,EAC3D,IAEMqD,EAAO3E,OAAOC,SAAS2E,SACvBC,EAAO,YAAG,WAAH,aACPC,EAAQH,EAAKG,MAAMD,GACnBE,EAAaD,EAAQA,EAAME,OAAOC,SAAW,EAE7CC,EAAW,UAAGH,KAAH,UAAuB7D,EAAMW,IAOxCsD,EAAsB,SAACC,EAAgBvF,GAC5B,MAAXA,EACF6E,EAAeU,GACK,MAAXvF,GAEL2E,GACFA,EAAWY,IAIjB,OACE,yBAAK9D,UAAWA,IACC,IAAdgD,GACC,yBAAKhD,UAAU,QACb,0BAAMA,UAAU,oBAAhB,iBACgB,kBAACW,EAAD,CAAaC,KAAMhB,EAAMgB,SAI7C,yBAAKZ,UAAU,UACb,kBAACmB,EAAD,CAAaP,KAAMhB,EAAMgB,OACzB,yBAAKZ,UAAU,UACb,6BACE,kBAACW,EAAD,CAAaE,iBAAe,EAACD,KAAMhB,EAAMgB,OACzC,2BAAIhB,EAAMmE,SACV,6BACE,kBAAClB,EAAD,CAAajD,MAAOA,MAGxB,yBAAKI,UAAU,sBACb,6BACGmD,IAA+B,IAAhBF,GACd,kBAAC,IAAM/B,SAAP,KACE,kBAACxB,EAAD,CACEE,MAAOuD,EACPrD,iBAAkB+D,EAClBhE,OAlDH,CAAEM,KAAM,OAAQD,QAAS,YAoDxB,kBAACR,EAAD,CACEE,MAAOuD,EACPrD,iBAAkB+D,EAClBhE,OAAQ,CAAEM,KAAM,SAAUD,QAAS,cAErC,kBAACR,EAAD,CACEE,MAAOuD,EACPrD,iBAAkB+D,EAClBhE,OAAQ,CAAEM,KAAM,UAAWD,QAAS,cAK5B,IAAb0D,EAAoB,KACnB,4BACE5D,UAAU,iCACVI,QA3DG,SAACrB,GAClBA,EAAMsB,iBACN3B,OAAOC,SAASC,KAAhB,WAA2BgB,EAAMW,MAuDrB,aCjFT,SAASyD,EAAWrE,GAAQ,IAAD,EACIsC,mBAAS,IADb,mBACzBgC,EADyB,KACbC,EADa,OAEJjC,mBAAS,IAFL,mBAEzBkC,EAFyB,KAEjBC,EAFiB,OAGFnC,mBAAS,MAHP,mBAGzBoC,EAHyB,KAGhBC,EAHgB,OAIMrC,oBAAS,GAJf,mBAIzBsC,EAJyB,KAIZC,EAJY,KAMhChC,qBAAU,WACR,IAAMiC,EAAQ,YAAI9E,EAAM+E,WAAWC,OAAOV,GACtCQ,EAAM1G,SAAWoG,EAAOpG,QAC1BqG,EAAUK,KAEX,CAAC9E,EAAM+E,UAAWT,EAAYE,IAEjC3B,qBAAU,WACR,IAAoB,IAAhB+B,EAAuB,CAUzB/E,EAAaG,EAAMF,UATW,SAACjB,EAAUD,GACxB,MAAXA,GACF+F,EAAW9F,EAASoG,MACpBV,EAAc1F,EAASqG,SACvBL,GAAe,IAEfM,MAAM,2BAKX,CAACb,EAAYM,EAAaC,EAAgB7E,EAAMF,WAEnD,IAAMsF,EAAmB,SAACC,GACxB,IAAMC,EAAgB,YAAOhB,GAC7BgB,EAAiBC,QAAQF,GACzBd,EAAce,GAEd,IAAME,EAAgB,YAAOhB,GAC7BgB,EAAiBD,QAAQF,GACzBZ,EAAUe,IAmBZ,OACE,kBAAC,IAAMjE,SAAP,KACGiD,EAAOiB,KAAI,SAACC,EAAMC,GAAP,OACV,kBAACvC,EAAD,CACEnD,MAAOyF,EACPnC,WAAY6B,EACZQ,IAAKD,EACLtF,UAAU,qDAGD,OAAZqE,GACC,4BAAQrE,UAAU,kBAAkBI,QA3BnB,SAACrB,GAEtB,GADAA,EAAMsB,iBACU,OAAZgE,EAAkB,CAWpB7E,EAAaG,EAAMF,UAVY,SAACjB,EAAUD,GACxC,GAAe,MAAXA,EAAgB,CAClB+F,EAAW9F,EAASoG,MACpB,IAAMY,EAAa,YAAIrB,GAAQQ,OAAOnG,EAASqG,SAC/CX,EAAcsB,GACdpB,EAAUoB,QAEVxG,QAAQC,IAAI,eAGqCoF,MAcnD,cClED,SAASoB,EAAY9F,GAC1B,IAAM+F,EAAcC,IAAMC,YAClBC,EAAalG,EAAbkG,SAEFC,EAAsB,SAACtH,EAAUD,GACtB,MAAXA,EACFsH,EAASrH,GAETQ,QAAQC,IAAI,oBAAqBT,IAWrC,OACE,yBAAKwB,UAAU,eACb,8BACE,8BACE+F,IAAKL,EACLM,UAAU,EACVhG,UAAU,eACVxC,KAAK,UAEP,4BACE2C,KAAK,SACLH,UAAU,uBACVI,QAnBa,SAACrB,GACpBA,EAAMsB,iBACN,IAAM4F,EAAWP,EAAYQ,QAAQC,MRdvCxJ,EAAc,OAAQ,gBQeKmJ,ERfsB,CAAE/B,QQelCkC,IACfP,EAAYQ,QAAQC,MAAQ,KAYxB,WC3BD,SAASC,EAASzG,GAAQ,IAAD,EACMsC,mBAAS,IADf,mBACvBgC,EADuB,KACXC,EADW,OAEFjC,mBAAS,IAFP,mBAEvBkC,EAFuB,KAEfC,EAFe,OAGAnC,mBAAS,MAHT,mBAGvBoC,EAHuB,KAGdC,EAHc,OAIQrC,oBAAS,GAJjB,mBAIvBsC,EAJuB,KAIVC,EAJU,KAM9BhC,qBAAU,WACR,IAAMiC,EAAQ,YAAI9E,EAAM+E,WAAWC,OAAOV,GACtCQ,EAAM1G,SAAWoG,EAAOpG,QAC1BqG,EAAUK,KAEX,CAAC9E,EAAM+E,UAAWT,EAAYE,IAEjC3B,qBAAU,WACR,IAAoB,IAAhB+B,EAAuB,CAQzBnF,GAP8B,SAACZ,EAAUD,GACxB,MAAXA,IACF+F,EAAW9F,EAASoG,MACpBV,EAAc1F,EAASqG,SACvBL,GAAe,UAKpB,CAACP,EAAYM,EAAaC,EAAgB7E,EAAMF,WAEnD,IAAMsF,EAAmB,SAACC,GACxB,IAAMC,EAAgB,YAAOhB,GAC7BgB,EAAiBC,QAAQF,GACzBd,EAAce,GAEd,IAAME,EAAgB,YAAOhB,GAC7BgB,EAAiBD,QAAQF,GACzBZ,EAAUe,IAmBZ,OACE,kBAAC,IAAMjE,SAAP,KACGiD,EAAOiB,KAAI,SAACC,EAAMC,GAAP,OACV,kBAACvC,EAAD,CACEnD,MAAOyF,EACPnC,WAAY6B,EACZQ,IAAKD,EACLtF,UAAU,qDAGD,OAAZqE,GACC,4BAAQrE,UAAU,kBAAkBI,QA3BnB,SAACrB,GAEtB,GADAA,EAAMsB,iBACU,OAAZgE,EAAkB,CAWpBjF,GAV+B,SAACZ,EAAUD,GACxC,GAAe,MAAXA,EAAgB,CAClB+F,EAAW9F,EAASoG,MACpB,IAAMY,EAAa,YAAIrB,GAAQQ,OAAOnG,EAASqG,SAC/CX,EAAcsB,GACdpB,EAAUoB,QAEVxG,QAAQC,IAAI,eAGqBoF,MAcnC,cCzBD,SAASgC,EAAqB1G,GAAQ,IACnCW,EAAYX,EAAZW,QADkC,EAER2B,oBAAS,GAFD,mBAEnCC,EAFmC,KAExBC,EAFwB,OAGhBF,mBAAS,MAHO,mBAGnCrC,EAHmC,KAG5B0G,EAH4B,KAIpC/D,EAAsB,SAAC/D,EAAUD,GACtB,MAAXA,EACF+H,EAAS9H,GAETsG,MAAM,0CAWV,OAPAtC,qBAAU,YACU,IAAdN,KV5CD,SAAwB5B,EAASxD,GACtCH,EAAc,MAAD,iBAAkB2D,GAAWxD,GU4CtCyJ,CAAejG,EAASiC,GACxBJ,GAAa,MAEd,CAACD,EAAW5B,IAEE,OAAVV,EAAiB,KACtB,kBAACmD,EAAD,CAAOnD,MAAOA,EAAOI,UAAWL,EAAMK,YClDtBwG,QACW,cAA7B9H,OAAOC,SAAS8H,UAEe,UAA7B/H,OAAOC,SAAS8H,UAEhB/H,OAAOC,SAAS8H,SAASjD,MACvB,2DCRN,IAAMkD,EAAIf,IAAMgB,cACVC,EAAelJ,SAASmJ,eAAe,aAC7C,GAAID,EAAc,CAChB,IAAME,EAAcJ,GFWf,SAAyB/G,GAAQ,IAAD,EACHsC,mBAAS,IADN,mBAC9ByC,EAD8B,KACnBqC,EADmB,KAE/BC,EAA8B,UAAnBrH,EAAMqH,SACnBC,EAAa,YAAOvC,GAOxB,OACE,yBAAK1E,UAAWL,EAAMK,WACnBgH,GAAY,kBAACvB,EAAD,CAAaI,SAPP,SAACb,GACtBiC,EAAc/B,QAAQF,GACtB+B,EAAaE,MAMX,kBAACjD,EAAD,eAAYU,UAAWA,GAAe/E,OExBHiH,EAAaM,SACpDC,IAASC,OAAON,EAAaF,GAG/B,IAAMS,EAAc3J,SAASmJ,eAAe,kBACxCQ,GACFF,IAASC,OAAOV,GFZX,SAAuB/G,GAAQ,IAAD,EACDsC,mBAAS,IADR,mBAC5ByC,EAD4B,KACjBqC,EADiB,KAE7BC,EAA8B,UAAnBrH,EAAMqH,SACnBC,EAAa,YAAOvC,GAMxB,OACE,yBAAK1E,UAAWL,EAAMK,WACnBgH,GAAY,kBAACvB,EAAD,CAAaI,SAPP,SAACb,GACtBiC,EAAc/B,QAAQF,GACtB+B,EAAaE,MAMX,kBAACb,EAAD,eAAU1B,UAAWA,GAAe/E,OEAP0H,EAAYH,SAAUG,GAGzB3J,SAAS4J,iBACvC,2BAEsBC,SAAQ,SAACC,GAC/BL,IAASC,OAAOV,EAAE1E,EAAuBwF,EAAUN,SAAUM,MAGpC9J,SAAS4J,iBAAiB,oBAClCC,SAAQ,SAACC,GAC1BL,IAASC,OAAOV,EAAEL,EAAsBmB,EAAUN,SAAUM,MDoGxD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhJ,QAAQgJ,MAAMA,EAAM9I,a","file":"static/js/main.421fea57.chunk.js","sourcesContent":["function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest(); // xhr = SomeClass()\r\n  const url = `http://127.0.0.1:8000/api/${endpoint}`;\r\n  xhr.responseType = \"json\";\r\n  var csrftoken = getCookie(\"csrftoken\");\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n  }\r\n  xhr.onload = function () {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail;\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\";\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n\r\n  xhr.onerror = function (event) {\r\n    console.log(\"error is \", event);\r\n    callback({ message: \"there was an error\" }, 400);\r\n  };\r\n  xhr.send(jsonData);\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\", \"tweets/create\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n  const data = { id: tweetId, action: action };\r\n  backendLookup(\"POST\", \"tweets/action\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\", `tweets/${tweetId}`, callback);\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n  let endpoint = \"tweets/feed\";\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api/\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n  let endpoint = \"tweets\";\r\n  if (username) {\r\n    endpoint = `tweets/?username=${username}`;\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api/\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n  const { tweet, action, didperformAction } = props;\r\n  const likes = tweet.likes ? tweet.likes : 0;\r\n  const className = props.className\r\n    ? props.className\r\n    : \"btn btn-primary btn-sm\";\r\n\r\n  const handleActionBackendEvent = (response, status) => {\r\n    if ((status === 200 || status === 201) && didperformAction) {\r\n      didperformAction(response, status);\r\n    }\r\n  };\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n  };\r\n\r\n  const display =\r\n    action.type === \"like\" ? `${likes} ${action.display}` : action.display;\r\n\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {\" \"}\r\n      {display}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function UserLink(props) {\r\n  const { username } = props;\r\n  const handleUserLink = (event) => {\r\n    window.location.href = `/profiles/${username}`;\r\n  };\r\n  return (\r\n    <span className=\"pointer\" onClick={handleUserLink}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const { user, includeFullName, hideLink } = props;\r\n  const nameDisplay =\r\n    includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\r\n  return (\r\n    <React.Fragment>\r\n      {nameDisplay}\r\n      {hideLink === true ? (\r\n        `@${user.username}`\r\n      ) : (\r\n        <UserLink username={user.username}>@{user.username}</UserLink>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const { user, hideLink } = props;\r\n  const userIdSpan = (\r\n    <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n      {user.username[0]}\r\n    </span>\r\n  );\r\n  return hideLink === true ? (\r\n    userIdSpan\r\n  ) : (\r\n    <UserLink username={user.username}>{userIdSpan}</UserLink>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\n\r\nexport function DisplayCount(props) {\r\n  return (\r\n    <span className={props.className}>\r\n      {numeral(props.children).format(\"0a\")}\r\n    </span>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiProfileDetail, apiProfileFollowToggle } from \"./lookup\";\r\nimport { UserDisplay, UserPicture } from \"./components\";\r\nimport { DisplayCount } from \"./utils\";\r\n\r\nfunction ProfileBadge(props) {\r\n  const { user, didFollowToggle, profileLoading } = props;\r\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\r\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n\r\n  const handleFollowToggle = (event) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    if (didFollowToggle && !profileLoading) {\r\n      didFollowToggle(currentVerb);\r\n    }\r\n  };\r\n\r\n  return user ? (\r\n    <div>\r\n      <UserPicture user={user} hideLink />\r\n      <p>\r\n        <UserDisplay user={user} includeFullName hideLink />{\" \"}\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.follower_count}</DisplayCount> follower.\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.following_count}</DisplayCount> following.\r\n      </p>\r\n      <p>{user.bio}</p>\r\n      <p>{user.location}</p>\r\n      <button className=\"btn btn-primary\" onClick={handleFollowToggle}>\r\n        {currentVerb}\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n  const { username } = props;\r\n  const [didLookUp, setDidLookUp] = useState(false);\r\n  const [profile, setProfile] = useState(null);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setProfile(response);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (didLookUp === false) {\r\n      apiProfileDetail(username, handleBackendLookup);\r\n      setDidLookUp(true);\r\n    }\r\n  }, [username, setDidLookUp, didLookUp]);\r\n\r\n  const handleNewFollow = (actionVerb) => {\r\n    console.log(actionVerb);\r\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n      console.log(response, status);\r\n      if (status === 200) {\r\n        setProfile(response);\r\n      }\r\n      setProfileLoading(false);\r\n    });\r\n    setProfileLoading(true);\r\n  };\r\n  return didLookUp === false ? (\r\n    \"Loading...\"\r\n  ) : profile ? (\r\n    <ProfileBadge\r\n      user={profile}\r\n      didFollowToggle={handleNewFollow}\r\n      profileLoading={profileLoading}\r\n    />\r\n  ) : null;\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n  backendLookup(\"GET\", `profiles/${username}`, callback);\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n  const data = { action: `${action && action}`.toLowerCase() }\r\n  backendLookup(\"POST\", `profiles/${username}/follow`, callback, data);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ActionBtn } from \"./buttons\";\r\nimport { UserDisplay, UserPicture } from \"../profiles\";\r\n\r\nexport function ParentTweet(props) {\r\n  const { tweet } = props;\r\n  return tweet.og_tweet ? (\r\n    <Tweet isRetweet hideActions tweet={tweet.og_tweet} />\r\n  ) : null;\r\n}\r\n\r\nexport function Tweet(props) {\r\n  const { tweet, didRetweet, hideActions, isRetweet } = props;\r\n  const [actionTweet, setActionTweet] = useState(\r\n    props.tweet ? props.tweet : null\r\n  );\r\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\r\n  className =\r\n    isRetweet === true ? `${className} p-2 border rounded` : className;\r\n  const action = { type: \"like\", display: \"Upvote\" };\r\n\r\n  const path = window.location.pathname;\r\n  const idRegex = /(?<tweetid>\\d+)/;\r\n  const match = path.match(idRegex);\r\n  const urlTweetId = match ? match.groups.tweetid : -1;\r\n\r\n  const isDetail = `${urlTweetId}` === `${tweet.id}`;\r\n\r\n  const handleLink = (event) => {\r\n    event.preventDefault();\r\n    window.location.href = `/${tweet.id}`;\r\n  };\r\n\r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet);\r\n    } else if (status === 201) {\r\n      //do something\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={className}>\r\n      {isRetweet === true && (\r\n        <div className=\"mb-2\">\r\n          <span className=\"small text-muted\">\r\n            Retweeted via <UserDisplay user={tweet.user} />\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex\">\r\n        <UserPicture user={tweet.user} />\r\n        <div className=\"col-11\">\r\n          <div>\r\n            <UserDisplay includeFullName user={tweet.user} />\r\n            <p>{tweet.content}</p>\r\n            <div>\r\n              <ParentTweet tweet={tweet} />\r\n            </div>\r\n          </div>\r\n          <div className=\"btn btn-group px-0\">\r\n            <div>\r\n              {actionTweet && hideActions !== true && (\r\n                <React.Fragment>\r\n                  <ActionBtn\r\n                    tweet={actionTweet}\r\n                    didperformAction={handlePerformAction}\r\n                    action={action}\r\n                  />\r\n                  <ActionBtn\r\n                    tweet={actionTweet}\r\n                    didperformAction={handlePerformAction}\r\n                    action={{ type: \"unlike\", display: \"Downvote\" }}\r\n                  />\r\n                  <ActionBtn\r\n                    tweet={actionTweet}\r\n                    didperformAction={handlePerformAction}\r\n                    action={{ type: \"retweet\", display: \"Repost\" }}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n\r\n              {isDetail === true ? null : (\r\n                <button\r\n                  className=\"btn btn-outline-primary btn-sm\"\r\n                  onClick={handleLink}\r\n                >\r\n                  View\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiTweetList } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextURL, setNextURL] = useState(null);\r\n  const [tweetDidSet, setTweetDidSet] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweetsInit, tweets]);\r\n\r\n  useEffect(() => {\r\n    if (tweetDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextURL(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetDidSet(true);\r\n        } else {\r\n          alert(\"an error occured.\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetDidSet, setTweetDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInIt = [...tweetsInit];\r\n    updateTweetsInIt.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInIt);\r\n\r\n    const updateFinalTweet = [...tweets];\r\n    updateFinalTweet.unshift(newTweet);\r\n    setTweets(updateFinalTweet);\r\n  };\r\n\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextURL !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextURL(response.next);\r\n          const newResults = [...tweets].concat(response.results);\r\n          setTweetsInit(newResults);\r\n          setTweets(newResults);\r\n        } else {\r\n          console.log(\"An error.\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleLoadNextResponse, nextURL);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => (\r\n        <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          key={index}\r\n          className=\"my-10 py-10 mx-auto border bg-white text-dark\"\r\n        />\r\n      ))}\r\n      {nextURL !== null && (\r\n        <button className=\"btn btn-primary\" onClick={handleLoadNext}>\r\n          Load next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { didTweet } = props;\r\n\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      console.log(\"An error occured \", response);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newValue = textAreaRef.current.value;\r\n    apiTweetCreate(newValue, handleBackendUpdate);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 mb-3\">\r\n      <form>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n        ></textarea>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary my-3\"\r\n          onClick={handleSubmit}\r\n        >\r\n          Tweet\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Tweet } from \"./detail\";\r\nimport { apiTweetFeed } from \"./lookup\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextURL, setNextURL] = useState(null);\r\n  const [tweetDidSet, setTweetDidSet] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweetsInit, tweets]);\r\n\r\n  useEffect(() => {\r\n    if (tweetDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextURL(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetDidSet(true);\r\n        }\r\n      };\r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetDidSet, setTweetDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInIt = [...tweetsInit];\r\n    updateTweetsInIt.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInIt);\r\n\r\n    const updateFinalTweet = [...tweets];\r\n    updateFinalTweet.unshift(newTweet);\r\n    setTweets(updateFinalTweet);\r\n  };\r\n\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextURL !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextURL(response.next);\r\n          const newResults = [...tweets].concat(response.results);\r\n          setTweetsInit(newResults);\r\n          setTweets(newResults);\r\n        } else {\r\n          console.log(\"An error.\");\r\n        }\r\n      };\r\n      apiTweetFeed(handleLoadNextResponse, nextURL);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => (\r\n        <Tweet\r\n          tweet={item}\r\n          didRetweet={handleDidRetweet}\r\n          key={index}\r\n          className=\"my-10 py-10 mx-auto border bg-white text-dark\"\r\n        />\r\n      ))}\r\n      {nextURL !== null && (\r\n        <button className=\"btn btn-primary\" onClick={handleLoadNext}>\r\n          Load next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TweetsList } from \"./list\";\r\nimport { TweetCreate } from \"./create\";\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\nimport { FeedList } from \"./feed\";\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  let tempNewTweets = [...newTweets];\r\n  const handleNewTweet = (newTweet) => {\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet && <TweetCreate didTweet={handleNewTweet} />}\r\n      <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  let tempNewTweets = [...newTweets];\r\n\r\n  const handleNewTweet = (newTweet) => {\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet && <TweetCreate didTweet={handleNewTweet} />}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const { tweetId } = props;\r\n  const [didLookUp, setDidLookUp] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response);\r\n    } else {\r\n      alert(\"There was an error finding the tweet.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (didLookUp === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup);\r\n      setDidLookUp(true);\r\n    }\r\n  }, [didLookUp, tweetId]);\r\n\r\n  return tweet === null ? null : (\r\n    <Tweet tweet={tweet} className={props.className} />\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from \"./App\";\nimport { TweetsComponent, TweetDetailComponent, FeedComponent } from \"./tweets\";\nimport { ProfileBadgeComponent } from \"./profiles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//ReactDOM.render(<App />, document.getElementById(\"root\"));\n\nconst e = React.createElement;\nconst tweetElement = document.getElementById(\"tweetme-2\");\nif (tweetElement) {\n  const myComponent = e(TweetsComponent, tweetElement.dataset);\n  ReactDOM.render(myComponent, tweetElement);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst userProfileBadgeElement = document.querySelectorAll(\n  \".tweetme2-profile-badge\"\n);\nuserProfileBadgeElement.forEach((container) => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n\nconst tweetDetailElement = document.querySelectorAll(\".tweetme2-detail\");\ntweetDetailElement.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}